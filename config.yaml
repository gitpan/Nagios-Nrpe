# default option, enable or disable logging 
log: 0

# default option, enable or disable verbose
verbose: 0

# nagios exit codes
nagios:
  ok: 0
  warning: 1
  critical: 2
  unknown: 3

# logging settings
log4perl:
  # default logging, log to syslog only.
  default: |
    log4perl.rootLogger                = DEBUG, SYSLOG
    log4perl.appender.SYSLOG           = Log::Dispatch::Syslog
    log4perl.appender.SYSLOG.min_level = debug
    log4perl.appender.SYSLOG.ident     = Nagios::Nrpe
    log4perl.appender.SYSLOG.facility  = daemon
    log4perl.appender.SYSLOG.layout    = Log::Log4perl::Layout::SimpleLayout

  # verbose logging, log to syslog and stdout.
  verbose: |
    log4perl.rootLogger                = DEBUG, SYSLOG, SCREEN
    log4perl.appender.SCREEN         = Log::Log4perl::Appender::Screen
    log4perl.appender.SCREEN.stderr  = 0
    log4perl.appender.SCREEN.layout  = Log::Log4perl::Layout::PatternLayout
    log4perl.appender.SCREEN.layout.ConversionPattern = %d %p %m %n
    log4perl.appender.SYSLOG           = Log::Dispatch::Syslog
    log4perl.appender.SYSLOG.min_level = debug
    log4perl.appender.SYSLOG.ident     = Nagios::Nrpe
    log4perl.appender.SYSLOG.facility  = daemon
    log4perl.appender.SYSLOG.layout    = Log::Log4perl::Layout::SimpleLayout

  # stdout logging, log to stdout only.
  stdout: |
    log4perl.rootLogger              = DEBUG, SCREEN
    log4perl.appender.SCREEN         = Log::Log4perl::Appender::Screen
    log4perl.appender.SCREEN.stderr  = 0
    log4perl.appender.SCREEN.layout  = Log::Log4perl::Layout::PatternLayout
    log4perl.appender.SCREEN.layout.ConversionPattern = %d %p %m %n

  # disabled logging (/dev/null), effectively killing all logging.
  disabled: |
    log4perl.rootLogger              = DEBUG, LOG1
    log4perl.appender.LOG1           = Log::Log4perl::Appender::File
    log4perl.appender.LOG1.filename  = /dev/null
    log4perl.appender.LOG1.mode      = append
    log4perl.appender.LOG1.layout    = Log::Log4perl::Layout::PatternLayout
    log4perl.appender.LOG1.layout.ConversionPattern = %d %p %m %n

# base template for new nrpe checks.
template: |
  #!/usr/bin/env perl
  
  use 5.010;
  use strict;
  use warnings;
  
  use Nagios::Nrpe;
  use Getopt::Long;
  use Pod::Usage;

  ## no critic (POD)
  ## no critic (return)

  our $VERSION  = '0.001';

  ## Setup default options.
  my $OPTIONS = { verbose => 0, }; 

  # Accept options in from the command line.
  GetOptions( $OPTIONS, 'verbose|v', 'help|h', 'man|m', );

  # Basic command line options flag switch.
  ( $OPTIONS->{help} )     ? exit pod2usage( 1 ) 
  : ( $OPTIONS->{man} )    ? exit pod2usage( -exitstatus => 0, -verbose => 2 )
  : check( $OPTIONS );


  sub check
  {
      my $options = shift;
      my $nrpe    = Nagios::Nrpe->new( verbose => $options->{verbose}, log => 0 );

      # INSERT YOUR CODE LOGIC HERE.
      # SEE: perldoc Nagios::Nrpe FOR MORE INFOMATION.

      $nrpe->exit_ok('OK');
  };


  __END__
  
  =pod

  =head1 NAME

  B<[% check_name %]> - INSERT ABSTRACT HERE

  =head1 VERSION

  version INSERT VERSION HERE

  =head1 SYNOPSIS

   [% check_name %]
  
  =head1 DESCRIPTION

  INSERT DESCRIPTION HERE

  =head1 OPTIONS

  =over 8

  =item B<-v, --verbose>
   Prints the error(s) found.

  =item B<-h, --help>
   Prints a brief help message.

  =item B<-m, --man>
   Prints the full manual page.

  =back

  =head1 AUTHOR

  INSERT AUTHOR HERE <INSERT EMAIL HERE>

  =head1 COPYRIGHT AND LICENSE
  
  INSERT HERE

  =cut
